- name: Reiniciar NetworkManager
  ansible.builtin.systemd_service:
    state: restarted
    name: NetworkManager

- name: Habilitar NetworkManager
  ansible.builtin.systemd_service:
    name: NetworkManager
    state: started
    enabled: true

- name: Eliminar conexiones conflictivas
  community.general.nmcli:
    conn_name: "Wired connection 1"
    state: absent
  ignore_errors: true
  become: true

- name: Eliminar posibles conexiones antiguas de la nic
  community.general.nmcli:
    conn_name: "{{nic_dhcp}}"
    state: absent
  ignore_errors: true
  become: true

- name: Crear conexión nic con IP estática
  ansible.builtin.command: >
    nmcli connection add type ethernet ifname "{{nic_dhcp}}" con-name "{{nic_dhcp}}" ipv4.addresses "{{static_ip_dhcp}}" ipv4.method manual
  become: true

- debug:
    var: nic_dhcp
- debug:
    var: static_ip_dhcp

- name: Activar conexión nic
  ansible.builtin.command:
    cmd: nmcli connection up "{{nic_dhcp}}"
  become: true

- name: Asegurarse de que la interfaz  está activa
  community.general.nmcli:
    conn_name: "{{nic_dhcp}}"
    state: up
  become: true

- name: Configurar el isc-dhcp-server para que escuche la interfaz
  ansible.builtin.lineinfile:
    path: /etc/default/isc-dhcp-server
    regexp: "^INTERFACESv4="
    line: 'INTERFACESv4="{{nic_dhcp}}"'
    state: present

- name: copiar el dhcpd.conf
  ansible.builtin.template:
    src: "dhcpd.conf.j2"
    dest: "/etc/dhcp/dhcpd.conf"
    owner: root
    group: root
    mode: "0644"

- name: Reiniciar el servidor isc-dhcp
  ansible.builtin.systemd_service:
    state: restarted
    name: isc-dhcp-server

- name: Habilitar el servidor isc-dhcp
  ansible.builtin.systemd_service:
    name: isc-dhcp-server
    state: started
    enabled: true

# # # # #
#       #
#       #
#       #
# EXTRA #
- name: Habilitar IP forwarding
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    sysctl_set: true
    state: present
    reload: true

- name: Configurar NAT en nic HOST
  ansible.builtin.iptables:
    table: nat
    chain: POSTROUTING
    source: "{{internal_gateway_vms}}"
    out_interface: "{{nic_bridge}}"
    jump: MASQUERADE

- name: Permitir forward clientes -> Internet
  ansible.builtin.iptables:
    chain: FORWARD
    in_interface: "{{nic_dhcp}}"
    out_interface: "{{nic_bridge}}"
    source: "{{internal_gateway_vms}}"
    jump: ACCEPT

- name: Permitir tráfico de retorno
  ansible.builtin.iptables:
    chain: FORWARD
    in_interface: "{{nic_bridge}}"
    out_interface: "{{nic_dhcp}}"
    destination: "{{internal_gateway_vms}}"
    ctstate: ESTABLISHED,RELATED
    jump: ACCEPT

- name: Guardar reglas iptables
  command: netfilter-persistent save

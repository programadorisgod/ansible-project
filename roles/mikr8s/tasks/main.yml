- name: Instalar dependencias necesarias para snapd
  ansible.builtin.apt:
    name:
      - apparmor
      - squashfs-tools
      - fuse
    state: present
    update_cache: yes
  become: true

- name: Asegurar que snapd está instalado
  ansible.builtin.apt:
    name: snapd
    state: present
  register: snapd_install
  until: snapd_install is succeeded
  retries: 5
  delay: 10
  become: true

- name: Asegurar que snapd está habilitado y corriendo
  ansible.builtin.systemd:
    name: snapd
    enabled: true
    state: started
  become: true

- name: Asegurar que el socket de snapd está habilitado
  ansible.builtin.systemd:
    name: snapd.socket
    enabled: true
    state: started
  become: true

- name: Asegurar que snapd esté corriendo
  block:
    - name: Reiniciar snapd si está inactivo
      ansible.builtin.systemd:
        name: snapd
        state: restarted
        enabled: true
      become: true

    - name: Esperar a que snapd esté listo
      ansible.builtin.command: systemctl is-active snapd
      register: snapd_status
      retries: 10
      delay: 20
      until: snapd_status.stdout == "active"
      become: true

- name: Instalar core (requerido por MicroK8s)
  ansible.builtin.command: snap install core
  args:
    creates: /snap/bin/core
  register: core_result
  until: core_result.rc == 0
  retries: 3
  delay: 15
  become: true

- name: Instalar MicroK8s estable
  ansible.builtin.command: snap install microk8s --classic --channel=latest/stable
  args:
    creates: /snap/bin/microk8s #args creates evita reinstalaciones
  register: microk8s_result
  until: microk8s_result.rc == 0 # rc es el código de retorno del comando [0 ok y 1 error]
  retries: 3 # seria el 1 intento + 3
  delay: 20
  become: true

#profle.d es es un directorio que contiene scripts shell que se ejecutan al iniciar sesión un usuario, evitando modificar el archivo /etc/profile directamente
#Al hacer  export PATH=$PATH:/snap/bin estamos creando un script que cada que el usuario inicie sesión se añadirá /snap/bin al PATH del usuario.
- name: Asegurar que /snap/bin está en PATH
  ansible.builtin.copy:
    dest: /etc/profile.d/snap_path.sh
    content: |
      export PATH=$PATH:/snap/bin
    owner: root
    group: root
    mode: "0644"
  become: true

- name: Esperar a que microk8s esté listo
  ansible.builtin.command: /snap/bin/microk8s status --wait-ready
  register: microk8s_ready
  retries: 10
  delay: 15
  changed_when: false # evitará que la tarea se nos muestre com [changed] sino como [ok]
  become: true

- name: Añadir usuario al grupo microk8s
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: microk8s
    append: yes
  become: true

- name: Crear alias kubectl para el usuario
  ansible.builtin.lineinfile:
    path: "/home/{{ ansible_user }}/.bashrc"
    line: "alias kubectl='microk8s kubectl'"
    state: present
    create: yes
  become: true
  become_user: "{{ ansible_user }}"

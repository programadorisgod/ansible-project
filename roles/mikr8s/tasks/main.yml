- name: Actualizar cache de apt
  ansible.builtin.apt:
    update_cache: yes

- name: Instalar snapd
  ansible.builtin.apt:
    name: snapd
    state: present

- name: Instalar MicroK8s
  ansible.builtin.command: snap install microk8s --classic
  args:
    creates: /snap/bin/microk8s

- name: Asegurar que /snap/bin está en PATH
  ansible.builtin.copy:
    dest: /etc/profile.d/snap_path.sh
    content: |
      export PATH=$PATH:/snap/bin
    owner: root
    group: root
    mode: "0644"

- name: Esperar a que microk8s esté listo
  ansible.builtin.wait_for:
    path: /snap/bin/microk8s
    state: present
    timeout: 120

- name: Añadir usuario al grupo microk8s
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: microk8s
    append: yes

- name: Esperar hasta que microk8s esté listo
  ansible.builtin.command: /snap/bin/microk8s status --wait-ready
  register: microk8s_status
  changed_when: false

- name: Crear directorio .kube
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/.kube"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"

- name: Cambiar propietario de .kube recursivamente
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/.kube"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    recurse: yes

- name: Habilitar addons de MicroK8s (ingres) (metallb) (balanceador) (hostpath-storage)
  ansible.builtin.command: /snap/bin/microk8s enable ingress metallb hostpath-storage
  delegate_to: "{{item}}"
  loop: "{{ groups['master'] }}"

- name: Crear alias kubectl
  ansible.builtin.lineinfile:
    path: "{{ ansible_env.HOME }}/.bashrc"
    line: "alias kubectl='/snap/bin/microk8s kubectl'"
    state: present
    create: yes
    insertafter: EOF
  become: false
